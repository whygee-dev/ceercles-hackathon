generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(cuid())
  email             String             @unique
  fullname          String
  password          String
  banned            Boolean            @default(false)
  profile           UserProfile?       
  passwordReset     PasswordReset?      
  roles             Role[]
  emailVerified     Boolean            @default(false)
  verificationToken String             @default(uuid())
  sentMessages      Message[]          @relation("sender")
  receivedMessages  Message[]          @relation("receiver")
  contacts          User[]             @relation("contacts")
  contactsRelation  User[]             @relation("contacts") 
  ceerclesJoined    Ceercle[]
  eventsJoined      Event[]
  deleted           Boolean            @default(false)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @default(now())
  points            Int                @default(0)
  boughtItems       ShopItem[]
}

model UserProfile {
  id            String         @id @default(cuid())
  user          User           @relation(fields: [id], references: [id])
  birthday      DateTime
  gender        Gender
  avatar        String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model PasswordReset {
  id            String         @id @default(uuid())
  user          User           @relation(fields: [userId], references: [id])
  userId        String         @unique
  used          Boolean        @default(false)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Message {
  id            String         @id @default(cuid())
  sender        User           @relation(fields: [senderId], references: [id], name: "sender")
  senderId      String         
  receiverId    String       
  receiver      User           @relation(fields: [receiverId], references: [id], name: "receiver")
  text          String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Ceercle {
  id            String         @id @default(cuid())
  name          String
  description   String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  users         User[]
}

model Event {
  id            String         @id @default(cuid())
  name          String
  description   String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  endsAt        DateTime
  users         User[]
}

model ShopItem {
  id            String         @id @default(cuid())
  name          String
  type          String
  price         Float
  value         Float
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  boughtBy      User[]
}

enum Role {
  ADMIN
  USER
  DELETED_USER
}

enum Gender {
  MALE
  FEMALE
}

